/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BD.Conexion;
import Clases.Articulo;
import Clases.F_P;
import Clases.Factura;
import Clases.Proveedor;
import Clases.tipoComprobante;
import Clases.tipoIVA;
import Clases.tipoMoneda;
import com.sun.glass.events.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emiliano
 */
public class VerFactura extends javax.swing.JFrame {

    Factura facGlobal;
    
    public VerFactura() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public VerFactura(Factura fac) {
        initComponents();
        this.facGlobal = fac;
        this.setLocationRelativeTo(null);
        this.jLabel17.setVisible(false);
        this.jListFacturaspNC.setVisible(false);
        this.jButtonModificar.setVisible(false);
        
        this.jCBTipoComprobante.setModel(new DefaultComboBoxModel(tipoComprobante.values()));
        this.jCBMoneda.setModel(new DefaultComboBoxModel(tipoMoneda.values()));
                
        this.jtextProveedor.setText(fac.getProveedor().getRazonSocial());
        this.jTextDireccion.setText(fac.getProveedor().getDireccion());
        this.jTextRut.setText(fac.getProveedor().getRUT());
        this.jTextSerie.setText(fac.getSerieComprobante());
        this.jTextNumeroFact.setText(String.valueOf(fac.getNroComprobante()));
        this.jTextTOTAL.setText(String.valueOf(fac.getTotal()));

        if (fac.getMoneda() == tipoMoneda.$U) {
            this.jCBMoneda.setSelectedIndex(0);
        } else if (fac.getMoneda() == tipoMoneda.US$) {
            this.jCBMoneda.setSelectedIndex(1);
        }
        
        if (fac.getTipo() == tipoComprobante.Credito) {
            this.jCBTipoComprobante.setSelectedIndex(1);
        }else if(fac.getTipo() == tipoComprobante.Contado){
            this.jCBTipoComprobante.setSelectedIndex(0);
        }else if(fac.getTipo() == tipoComprobante.DevolucionContado){
            this.jCBTipoComprobante.setSelectedIndex(2);
        }else if(fac.getTipo() == tipoComprobante.NotaCredito){
            this.jCBTipoComprobante.setSelectedIndex(3);
            this.jLabel17.setVisible(true);
            this.jListFacturaspNC.setVisible(true);
        }
        
        this.jDateChooserFecha.setDate(fac.getFecha());
        
        List<F_P> ListF_P = fac.getFp_s();
        DefaultTableModel model = (DefaultTableModel) this.jTableArticulos.getModel();
        
        for(int i = 0; i < ListF_P.size(); i++){
            String nombre_desc = ListF_P.get(i).getArticulo().getNombre() + ListF_P.get(i).getArticulo().getDescripcion();
            
            float subtotal = (ListF_P.get(i).getCantidad() * ListF_P.get(i).getPrecio()) - ListF_P.get(i).getDescuento();
            
            model.addRow(new Object[]{nombre_desc,ListF_P.get(i).getCantidad(),ListF_P.get(i).getPrecio(),ListF_P.get(i).getDescuento(),subtotal});
        }
        
        this.jtextProveedor.setEditable(false);
        this.jTextRut.setEditable(false);
        this.jTextDireccion.setEditable(false);
        this.jTextSerie.setEditable(false);
        this.jTextNumeroFact.setEditable(false);
        this.jTextSubTotal.setEditable(false);
        this.jTextIVAminimo.setEditable(false);
        this.jTextIVAbasico.setEditable(false);
        this.jTextTOTAL.setEditable(false);
        this.jDateChooserFecha.setEnabled(false);
        this.jCBTipoComprobante.setEnabled(false);
        this.jCBMoneda.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextRut = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonCerrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jCBMoneda = new javax.swing.JComboBox<>();
        jCBTipoComprobante = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextSerie = new javax.swing.JTextField();
        jTextNumeroFact = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextDireccion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtextProveedor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableArticulos = new javax.swing.JTable();
        jButtonModificar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextSubTotal = new javax.swing.JTextField();
        jTextTOTAL = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextIVAbasico = new javax.swing.JTextField();
        jTextIVAminimo = new javax.swing.JTextField();
        jDateChooserFecha = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListFacturaspNC = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jTextArticulo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextCantidad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextUnitario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextDescuento = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextSubTotalArt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButtonAgregarArticulo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuEdicion = new javax.swing.JMenu();
        jMenuItemModificar = new javax.swing.JMenuItem();
        jMenuItemEliminar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setText("Direccion");

        jTextRut.setText("120003210015");

        jLabel4.setText("Fecha");

        jButtonCerrar.setText("Cerrar");
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        jLabel5.setText("Moneda");

        jLabel6.setText("Comprobante");

        jLabel7.setText("Numero");

        jLabel1.setText("Proveedor");

        jLabel2.setText("Rut");

        jTableArticulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Articulo", "Cantidad", "Unitario", "Descuento", "SubTotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableArticulos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTableArticulos);
        if (jTableArticulos.getColumnModel().getColumnCount() > 0) {
            jTableArticulos.getColumnModel().getColumn(0).setPreferredWidth(510);
            jTableArticulos.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTableArticulos.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTableArticulos.getColumnModel().getColumn(3).setPreferredWidth(70);
            jTableArticulos.getColumnModel().getColumn(4).setPreferredWidth(92);
        }

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jLabel13.setText("SubTotal");

        jLabel14.setText("IVA Minimo");

        jLabel15.setText("Total");

        jLabel16.setText("IVA Basico");

        jLabel17.setText("Corresponde a la(s) factura(s):");

        jScrollPane2.setViewportView(jListFacturaspNC);

        jTextArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArticuloKeyPressed(evt);
            }
        });

        jLabel8.setText("Articulo");

        jTextCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextCantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCantidadKeyTyped(evt);
            }
        });

        jLabel9.setText("Cantidad");

        jTextUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextUnitarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextUnitarioKeyTyped(evt);
            }
        });

        jLabel10.setText("Unitario");

        jTextDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDescuentoActionPerformed(evt);
            }
        });
        jTextDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextDescuentoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextDescuentoKeyTyped(evt);
            }
        });

        jLabel11.setText("Descuento");

        jTextSubTotalArt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextSubTotalArtKeyPressed(evt);
            }
        });

        jLabel12.setText("SubTotal");

        jButtonAgregarArticulo.setText("+");
        jButtonAgregarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarArticuloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jTextArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jTextUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextSubTotalArt, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAgregarArticulo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonAgregarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextSubTotalArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jMenuEdicion.setText("Edición");

        jMenuItemModificar.setText("Modificar");
        jMenuItemModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModificarActionPerformed(evt);
            }
        });
        jMenuEdicion.add(jMenuItemModificar);

        jMenuItemEliminar.setText("Eliminar");
        jMenuItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEliminarActionPerformed(evt);
            }
        });
        jMenuEdicion.add(jMenuItemEliminar);

        jMenuBar1.add(jMenuEdicion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel15)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextTOTAL, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel16)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel14)
                                            .addGap(4, 4, 4)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextIVAminimo)
                                        .addComponent(jTextIVAbasico, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCerrar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jtextProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTextRut, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(297, 297, 297))
                            .addComponent(jTextDireccion)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCBMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCBTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextNumeroFact))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtextProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jCBTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(jDateChooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jCBMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextNumeroFact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextIVAminimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(6, 6, 6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextIVAbasico, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextTOTAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCerrar)
                    .addComponent(jButtonModificar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarActionPerformed

    private void jMenuItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemEliminarActionPerformed

    private void jMenuItemModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModificarActionPerformed
        this.jTextRut.setEditable(true);
        this.jTextDireccion.setEditable(true);
        this.jTextSerie.setEditable(true);
        this.jTextNumeroFact.setEditable(true);
        this.jDateChooserFecha.setEnabled(true);
        this.jCBTipoComprobante.setEnabled(true);
        this.jCBMoneda.setEnabled(true);
        this.jButtonModificar.setVisible(true);
    }//GEN-LAST:event_jMenuItemModificarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        
        Factura fac = new Factura();

        if (this.jCBTipoComprobante.getSelectedItem().toString().equals("Contado")) {
            fac.setTipo(tipoComprobante.Contado);
            fac.setCotizacion(45);
            fac.setSerieComprobante(this.jTextSerie.getText());
            fac.setNroComprobante(Integer.parseInt(this.jTextNumeroFact.getText()));
            fac.setPendiente(0);
            fac.setTotal(Float.parseFloat(this.jTextTOTAL.getText()));
            fac.setFecha(this.jDateChooserFecha.getDate());
            fac.setProveedor(this.facGlobal.getProveedor());

            if (this.jCBMoneda.getSelectedItem() == tipoMoneda.$U) {
                fac.setMoneda(tipoMoneda.$U);
            } else if (this.jCBMoneda.getSelectedItem() == tipoMoneda.US$ ) {
                fac.setMoneda(tipoMoneda.US$);
            }
            

//            List<F_P> listaf_p = new ArrayList<F_P>();
//            DefaultTableModel modelo = (DefaultTableModel) jTableArticulos.getModel();
//            for (int i = 0; i < modelo.getRowCount(); i++) {
//                F_P f_p = new F_P();
//                f_p.setFactura(fac);
//                f_p.setArticulo(this.ListaArticulo.get(i));
//
//                String c = modelo.getValueAt(i, 1).toString();
//                float cant = Float.parseFloat(c);
//                f_p.setCantidad(cant);
//
//                String p = modelo.getValueAt(i, 2).toString();
//                float precio = Float.parseFloat(p);
//                f_p.setPrecio(precio);
//
//                String d = modelo.getValueAt(i, 3).toString();
//                float descuento = Float.parseFloat(d);
//                f_p.setDescuento(descuento);
//
//                this.ListaArticulo.get(i).addF_P(f_p);
//
//                listaf_p.add(f_p);
//            }
            fac.setFp_s(facGlobal.getFp_s());

        } else if (this.jCBTipoComprobante.getSelectedItem().toString().equals("Crédito")) {
            fac.setTipo(tipoComprobante.Credito);
            fac.setCotizacion(45);
            fac.setSerieComprobante(this.jTextSerie.getText());
            fac.setNroComprobante(Integer.parseInt(this.jTextNumeroFact.getText()));
            fac.setPendiente(Float.parseFloat(this.jTextTOTAL.getText()));
            fac.setTotal(Float.parseFloat(this.jTextTOTAL.getText()));
            fac.setFecha(this.jDateChooserFecha.getDate());
            fac.setProveedor(this.facGlobal.getProveedor());

            if (this.jCBMoneda.getSelectedItem() == tipoMoneda.$U) {
                fac.setMoneda(tipoMoneda.$U);
            } else if (this.jCBMoneda.getSelectedItem() == tipoMoneda.US$ ) {
                fac.setMoneda(tipoMoneda.US$);
            }

//            List<F_P> listaf_p = new ArrayList<F_P>();
//            DefaultTableModel modelo = (DefaultTableModel) jTableArticulos.getModel();
//            for (int i = 0; i < modelo.getRowCount(); i++) {
//                F_P f_p = new F_P();
//                f_p.setFactura(fac);
//                f_p.setArticulo(this.ListaArticulo.get(i));
//
//                String c = modelo.getValueAt(i, 1).toString();
//                float cant = Float.parseFloat(c);
//                f_p.setCantidad(cant);
//
//                String p = modelo.getValueAt(i, 2).toString();
//                float precio = Float.parseFloat(p);
//                f_p.setPrecio(precio);
//
//                String d = modelo.getValueAt(i, 3).toString();
//                float descuento = Float.parseFloat(d);
//                f_p.setDescuento(descuento);
//
//                this.ListaArticulo.get(i).addF_P(f_p);
//
//                listaf_p.add(f_p);
//            }
            fac.setFp_s(facGlobal.getFp_s());
        } else if (this.jCBTipoComprobante.getSelectedItem().toString().equals("Devolución Contado")) {
            fac.setTipo(tipoComprobante.DevolucionContado);
            fac.setCotizacion(45);
            fac.setSerieComprobante(this.jTextSerie.getText());
            fac.setNroComprobante(Integer.parseInt(this.jTextNumeroFact.getText()));
            fac.setPendiente(0);
            fac.setTotal(Float.parseFloat(this.jTextTOTAL.getText()));
            fac.setFecha(this.jDateChooserFecha.getDate());
            fac.setProveedor(this.facGlobal.getProveedor());

            if (this.jCBMoneda.getSelectedItem() == tipoMoneda.$U) {
                fac.setMoneda(tipoMoneda.$U);
            } else if (this.jCBMoneda.getSelectedItem() == tipoMoneda.US$ ) {
                fac.setMoneda(tipoMoneda.US$);
            }

//            List<F_P> listaf_p = new ArrayList<F_P>();
//            DefaultTableModel modelo = (DefaultTableModel) jTableArticulos.getModel();
//            for (int i = 0; i < modelo.getRowCount(); i++) {
//                F_P f_p = new F_P();
//                f_p.setFactura(fac);
//                f_p.setArticulo(this.ListaArticulo.get(i));
//
//                String c = modelo.getValueAt(i, 1).toString();
//                float cant = Float.parseFloat(c);
//                f_p.setCantidad(cant);
//
//                String p = modelo.getValueAt(i, 2).toString();
//                float precio = Float.parseFloat(p);
//                f_p.setPrecio(precio);
//
//                String d = modelo.getValueAt(i, 3).toString();
//                float descuento = Float.parseFloat(d);
//                f_p.setDescuento(descuento);
//
//                this.ListaArticulo.get(i).addF_P(f_p);
//
//                listaf_p.add(f_p);
//
//            }
            fac.setFp_s(facGlobal.getFp_s());
        } else if (this.jCBTipoComprobante.getSelectedItem().toString().equals("Nota de crédito")) {
            fac.setTipo(tipoComprobante.NotaCredito);
        }
        //fac.setUsuario(usuario);

        boolean f;
        Conexion.getInstance().merge(fac);
//        List<F_P> lf_p = fac.getFp_s();
//        for (int i = 0; i < lf_p.size(); i++) {
//            boolean pf = Conexion.getInstance().persist(lf_p.get(i));
//            if (!pf) {
//                javax.swing.JOptionPane.showMessageDialog(null, "Ha ocurrido un problema.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
//            }
//        }
//        if (f) {
//            javax.swing.JOptionPane.showMessageDialog(null, "Factura fue ingresada exitosamente.", "Enhorabuena", javax.swing.JOptionPane.INFORMATION_MESSAGE);
//        } else {
//            javax.swing.JOptionPane.showMessageDialog(null, "Ha ocurrido un problema.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jTextDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDescuentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDescuentoActionPerformed

    private void jTextDescuentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextDescuentoKeyPressed
        char caracter = evt.getKeyChar();
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)  {
            if (this.jTextArticulo.getText().length() == 0) {
                javax.swing.JOptionPane.showMessageDialog(null, "Debe ingresar un articulo.", "Precaucion!", javax.swing.JOptionPane.WARNING_MESSAGE);
            } else if (this.jTextCantidad.getText().length() == 0) {
                javax.swing.JOptionPane.showMessageDialog(null, "Falta ingresar la cantidad.", "Precaucion!", javax.swing.JOptionPane.WARNING_MESSAGE);
            } else if (this.jTextUnitario.getText().length() == 0) {
                javax.swing.JOptionPane.showMessageDialog(null, "Falta ingresar el precio unitario del articulo.", "Precaucion!", javax.swing.JOptionPane.WARNING_MESSAGE);
            } else {
//
//                float descuento;
//                if (this.jTextDescuento.getText().length() == 0) {
//                    descuento = 0;
//                } else {
//                    descuento = Float.parseFloat(this.jTextDescuento.getText());
//                }
//
//                DefaultTableModel model = (DefaultTableModel) this.jTableArticulos.getModel();
//                float cantidad = Float.parseFloat(this.jTextCantidad.getText());
//                float unitario = Float.parseFloat(this.jTextUnitario.getText());
//
//                float subtotalar = unitario * cantidad - descuento;
//                model.addRow(new Object[]{this.jTextArticulo.getText(), cantidad, unitario, descuento, subtotalar});
//                this.ListaArticulo.add(articulo_seleccionado);
//                this.articulo_seleccionado = null;
//                this.jTextArticulo.setText("");
//                this.jTextCantidad.setText("");
//                this.jTextUnitario.setText("");
//                this.jTextDescuento.setText("");
//                this.jTextSubTotalArt.setText("");
//                this.jTextArticulo.requestFocus();
//                if (this.jCheckBoxIvaInc.isSelected()) {
//                    this.CalcularTotales_conIVA_inc();
//                } else {
//                    this.CalcularTotales_sinIVA_inc();
//                }
            }
        } else if (((caracter < '0')
            || (caracter > '9'))
        && (caracter != '\b')) {
        evt.consume();  // ignorar el evento de teclado
        } else if (!((caracter < '0') || (caracter > '9'))) {
            int cant = 0, un = 0;
            if (this.jTextCantidad.getText().length() > 0) {
                cant = Integer.parseInt(this.jTextCantidad.getText());
            }
            if (this.jTextUnitario.getText().length() > 0) {
                un = Integer.parseInt(this.jTextUnitario.getText());
            }

            int sub = cant * un - Integer.parseInt(Character.toString(caracter));
            this.jTextSubTotalArt.setText(Integer.toString(sub));
        }
    }//GEN-LAST:event_jTextDescuentoKeyPressed

    private void jTextDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextDescuentoKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
            || (caracter > '9'))
        && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
        evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_jTextDescuentoKeyTyped

    private void jTextSubTotalArtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSubTotalArtKeyPressed

    }//GEN-LAST:event_jTextSubTotalArtKeyPressed

    private void jButtonAgregarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarArticuloActionPerformed
//        if (this.jTextArticulo.getText().length() == 0) {
//            javax.swing.JOptionPane.showMessageDialog(null, "Debe ingresar un articulo.", "Precaucion!", javax.swing.JOptionPane.WARNING_MESSAGE);
//        } else if (this.jTextCantidad.getText().length() == 0) {
//            javax.swing.JOptionPane.showMessageDialog(null, "Falta ingresar la cantidad.", "Precaucion!", javax.swing.JOptionPane.WARNING_MESSAGE);
//        } else if (this.jTextUnitario.getText().length() == 0) {
//            javax.swing.JOptionPane.showMessageDialog(null, "Falta ingresar el precio unitario del articulo.", "Precaucion!", javax.swing.JOptionPane.WARNING_MESSAGE);
//        } else {
//
//            float descuento;
//            if (this.jTextDescuento.getText().length() == 0) {
//                descuento = 0;
//            } else {
//                descuento = Float.parseFloat(this.jTextDescuento.getText());
//            }
//
//            DefaultTableModel model = (DefaultTableModel) this.jTableArticulos.getModel();
//            float cantidad = Float.parseFloat(this.jTextCantidad.getText());
//            float unitario = Float.parseFloat(this.jTextUnitario.getText());
//
//            float subtotalar = unitario * cantidad - descuento;
//            model.addRow(new Object[]{this.jTextArticulo.getText(), cantidad, unitario, descuento, subtotalar});
//            this.ListaArticulo.add(articulo_seleccionado);
//            this.articulo_seleccionado = null;
//            this.jTextArticulo.setText("");
//            this.jTextCantidad.setText("");
//            this.jTextUnitario.setText("");
//            this.jTextDescuento.setText("");
//            this.jTextSubTotalArt.setText("");
//            if (this.jCheckBoxIvaInc.isSelected()) {
//                this.CalcularTotales_conIVA_inc();
//            } else {
//                this.CalcularTotales_sinIVA_inc();
//            }
//
//        }
    }//GEN-LAST:event_jButtonAgregarArticuloActionPerformed

    private void jTextArticuloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArticuloKeyPressed
//        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)  {
//            articulosBuscador AB = new articulosBuscador(this.jTextArticulo.getText(), this);
//            if (AB.sizeconsulta > 1) {
//                AB.show();
//                this.jTextArticulo.transferFocus();
//            } else if (AB.sizeconsulta == 1) {
//                this.jTextArticulo.transferFocus();
//            } else {
//                javax.swing.JOptionPane.showMessageDialog(null, "Ese articulo no existe", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
//            }
//        }
    }//GEN-LAST:event_jTextArticuloKeyPressed

    private void jTextCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCantidadKeyPressed
        char caracter = evt.getKeyChar();
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)  {
            this.jTextCantidad.transferFocus();
        } else if (!((caracter < '0') || (caracter > '9'))) {
            int des = 0, un = 0;
            if (this.jTextDescuento.getText().length() > 0) {
                des = Integer.parseInt(this.jTextDescuento.getText());
            }
            if (this.jTextUnitario.getText().length() > 0) {
                un = Integer.parseInt(this.jTextUnitario.getText());
            }

            int sub = Integer.parseInt(Character.toString(caracter)) * un - des;
            this.jTextSubTotalArt.setText(Integer.toString(sub));
        }
    }//GEN-LAST:event_jTextCantidadKeyPressed

    private void jTextCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCantidadKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
            || (caracter > '9'))
        && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
        evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_jTextCantidadKeyTyped

    private void jTextUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextUnitarioKeyPressed
        char caracter = evt.getKeyChar();
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)  {
            this.jTextUnitario.transferFocus();
        } else if (((caracter < '0')
            || (caracter > '9'))
        && (caracter != '\b')) {
        evt.consume();  // ignorar el evento de teclado
        } else if (!((caracter < '0') || (caracter > '9'))) {
            int cant = 0, des = 0;
            if (this.jTextCantidad.getText().length() > 0) {
                cant = Integer.parseInt(this.jTextCantidad.getText());
            }
            if (this.jTextDescuento.getText().length() > 0) {
                des = Integer.parseInt(this.jTextDescuento.getText());
            }

            int sub = cant * Integer.parseInt(Character.toString(caracter)) - des;
            this.jTextSubTotalArt.setText(Integer.toString(sub));
        }
    }//GEN-LAST:event_jTextUnitarioKeyPressed

    private void jTextUnitarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextUnitarioKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
            || (caracter > '9'))
        && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
        evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_jTextUnitarioKeyTyped

    
        private void CalcularTotales_sinIVA_inc() {
//        float subtotal = 0, iva_minimo = 0, iva_basico = 0, total = 0;
//
//        DefaultTableModel modelo = (DefaultTableModel) jTableArticulos.getModel();
//        for (int i = 0; i < modelo.getRowCount(); i++) {
//            String v = modelo.getValueAt(i, 4).toString();
//            float val = Float.parseFloat(v);
//            subtotal = subtotal + val;
//
//            Articulo a = this.ListaArticulo.get(i);
//            if (a.getIva().getTipo() == tipoIVA.Minimo) {
//                float iv = (val / 100) * a.getIva().getPorcentaje();
//                iva_minimo = iva_minimo + iv;
//            } else if (a.getIva().getTipo() == tipoIVA.Basico) {
//                float iv = (val / 100) * a.getIva().getPorcentaje();
//                iva_basico = iva_basico + iv;
//            }
//
//        }
//        total = subtotal + iva_minimo + iva_basico;
//        this.jTextIVAminimo.setText(String.valueOf(iva_minimo));
//        this.jTextIVAbasico.setText(String.valueOf(iva_basico));
//        this.jTextSubTotal.setText(String.valueOf(subtotal));
//        this.jTextTOTAL.setText(String.valueOf(total));
    }

    private void CalcularTotales_conIVA_inc() {
//        float subtotal = 0, iva_minimo = 0, iva_basico = 0, total = 0;
//
//        DefaultTableModel modelo = (DefaultTableModel) jTableArticulos.getModel();
//        for (int i = 0; i < modelo.getRowCount(); i++) {
//            String v = modelo.getValueAt(i, 4).toString();
//            float val = Float.parseFloat(v);
//            total = total + val;
//
//            Articulo a = this.ListaArticulo.get(i);
//            if (a.getIva().getTipo() == tipoIVA.Minimo) {
//                float iv = (val / 100) * a.getIva().getPorcentaje();
//                iva_minimo = iva_minimo + iv;
//            } else if (a.getIva().getTipo() == tipoIVA.Basico) {
//                float iv = (val / 100) * a.getIva().getPorcentaje();
//                iva_basico = iva_basico + iv;
//            }
//
//        }
//        subtotal = total - iva_minimo - iva_basico;
//        this.jTextIVAminimo.setText(String.valueOf(iva_minimo));
//        this.jTextIVAbasico.setText(String.valueOf(iva_basico));
//        this.jTextSubTotal.setText(String.valueOf(subtotal));
//        this.jTextTOTAL.setText(String.valueOf(total));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerFactura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarArticulo;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JComboBox<String> jCBMoneda;
    private javax.swing.JComboBox<String> jCBTipoComprobante;
    private com.toedter.calendar.JDateChooser jDateChooserFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListFacturaspNC;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdicion;
    private javax.swing.JMenuItem jMenuItemEliminar;
    private javax.swing.JMenuItem jMenuItemModificar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableArticulos;
    private javax.swing.JTextField jTextArticulo;
    private javax.swing.JTextField jTextCantidad;
    private javax.swing.JTextField jTextDescuento;
    private javax.swing.JTextField jTextDireccion;
    private javax.swing.JTextField jTextIVAbasico;
    private javax.swing.JTextField jTextIVAminimo;
    private javax.swing.JTextField jTextNumeroFact;
    private javax.swing.JTextField jTextRut;
    private javax.swing.JTextField jTextSerie;
    private javax.swing.JTextField jTextSubTotal;
    private javax.swing.JTextField jTextSubTotalArt;
    private javax.swing.JTextField jTextTOTAL;
    private javax.swing.JTextField jTextUnitario;
    private javax.swing.JTextField jtextProveedor;
    // End of variables declaration//GEN-END:variables
}
