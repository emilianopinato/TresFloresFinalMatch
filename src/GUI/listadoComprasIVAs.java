/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BD.Conexion;
import Clases.Factura;
import java.util.Date;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Image;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;


/**
 *
 * @author joaco
 */
public class listadoComprasIVAs extends javax.swing.JFrame {

    /**
     * Creates new form listadoComprasIVAs
     */
    public listadoComprasIVAs() {
        initComponents();
        
        //Escondo la columna que tiene el objeto guardado.
        jTable1.getColumnModel().getColumn(6).setMinWidth(0);
        jTable1.getColumnModel().getColumn(6).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(6).setWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jDateChooserDesde = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jDateChooserHasta = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proveedor", "RUT", "Subtotal", "IVA Mínimo", "IVA Básico", "Total", "Objeto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Desde");

        jLabel3.setText("Hasta");

        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Listar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Crear PDF");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("TOTAL: ");

        jLabel4.setText(" IVA BASICO: ");

        jLabel5.setText("IVA MÍNIMO:");

        jButton1.setText("Crear Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooserDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooserHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jTextField2))))
                .addGap(147, 147, 147))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooserHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooserDesde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Date fechaDesde = jDateChooserDesde.getDate();
        Date fechaHasta = jDateChooserHasta.getDate();

        if (fechaDesde.after(fechaHasta)) {
            javax.swing.JOptionPane.showMessageDialog(null, "Fecha desde debe ser menor a fecha hasta");
        } else {
            DefaultTableModel mdl = (DefaultTableModel) jTable1.getModel();
            Iterator<Factura> it = Conexion.getInstance().ListarFacturasPorFechaSinProveedor(fechaDesde, fechaHasta).iterator();
            mdl.setRowCount(0);

            float total = 0;
            float ivaMinimo = 0;
            float ivaBasico = 0;

            while (it.hasNext()) {
                Factura next = it.next();
                Object[] fila = new Object[7];
                if (!next.isDeshabilitado()) {
                    float subTotal = next.getTotal() - next.getIvaBasico() - next.getIvaMinimo();
                    total = total + next.getTotal();
                    ivaMinimo = ivaMinimo + next.getIvaMinimo();
                    ivaBasico = ivaBasico + next.getIvaBasico();
                    fila[0] = next.getProveedor().getRazonSocial();
                    fila[1] = next.getProveedor().getRUT();
                    fila[2] = subTotal;
                    fila[3] = next.getIvaMinimo();
                    fila[4] = next.getIvaBasico();
                    fila[5] = next.getTotal();
                    fila[6] = next;
                    mdl.addRow(fila);
                }
            }

            this.jTextField1.setText(String.valueOf(total));
            this.jTextField2.setText(String.valueOf(ivaBasico));
            this.jTextField3.setText(String.valueOf(ivaMinimo));
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        Date fechaDesde = jDateChooserDesde.getDate();
        Date fechaHasta = jDateChooserHasta.getDate();
        float total = 0;
        float ivaMinimo = 0;
        float ivaBasico = 0;
        float sumaSubTotal = 0;
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        DecimalFormat formatoFloat = new DecimalFormat("#.00");

        Document documento = new Document();
        try{
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Documents/reporteIVA.pdf"));
            
            //Imagen dentro del documento.-------------------------//
            //Image header = Image.getInstance("src/img/header.png");
            //header.scaleToFit(650,1000);
            //header.setAlignment(Chunk.ALIGN_CENTER);
            //-----------------------------------------------------//        
            
            //Titulo del documento------------------------------------------------------------------------//
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            
            Paragraph parrafo2 = new Paragraph();
            parrafo2.setAlignment(Paragraph.ALIGN_CENTER);
            
            //Fecha en que se hizo la consulta//
            parrafo.setFont(FontFactory.getFont("Tahoma", 20, Font.BOLD, BaseColor.BLACK));                    
            parrafo.add(sdf.format(fechaHasta) + "\n\n");
           
            parrafo2.setFont(FontFactory.getFont("Tahoma", 16, Font.BOLD, BaseColor.BLACK));
            parrafo2.add("Listado de compras separado por IVA mínimo e IVA básico a cierre de mes. \n\n ");         
            //--------------------------------------------------------------------------------------------//
      
            documento.open();
            documento.add(parrafo);
            documento.add(parrafo2);
            
            //Columnas que va a tener el PDF---------------------------------------------//
            PdfPTable tabla = new PdfPTable(6);
            
            //Columna del proveedor//
            PdfPCell cProveedor = new PdfPCell();
            Paragraph pProveedor = new Paragraph();
            pProveedor.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
            pProveedor.setAlignment(Paragraph.ALIGN_CENTER);
            pProveedor.add("Proveedor");
            cProveedor.addElement(pProveedor);
            tabla.addCell(cProveedor);
            
            //Columna del RUT del proveedor//
            PdfPCell cRUTProveedor = new PdfPCell();
            Paragraph pRUTProveedor = new Paragraph();
            pRUTProveedor.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
            pRUTProveedor.setAlignment(Paragraph.ALIGN_CENTER);
            pRUTProveedor.add("RUT");
            cRUTProveedor.addElement(pRUTProveedor);
            tabla.addCell(cRUTProveedor);
            
            //Columna del subtotal//
            PdfPCell cSubTotal = new PdfPCell();
            Paragraph pSubTotal = new Paragraph();
            pSubTotal.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
            pSubTotal.setAlignment(Paragraph.ALIGN_CENTER);
            pSubTotal.add("Subtotal");          
            cSubTotal.addElement(pSubTotal);
            tabla.addCell(cSubTotal);
            
            //Columna del IVA minimo//
            PdfPCell cIVAMinimo = new PdfPCell();
            Paragraph pIVAMinimo = new Paragraph();
            pIVAMinimo.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
            pIVAMinimo.setAlignment(Paragraph.ALIGN_CENTER);
            pIVAMinimo.add("IVA Mínimo");            
            cIVAMinimo.addElement(pIVAMinimo);
            tabla.addCell(cIVAMinimo);
     
            //Columna del IVA básico//
            PdfPCell cIVABasico = new PdfPCell();
            Paragraph pIVABasico = new Paragraph();
            pIVABasico.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
            pIVABasico.setAlignment(Paragraph.ALIGN_CENTER);
            pIVABasico.add("IVA Básico");           
            cIVABasico.addElement(pIVABasico);
            tabla.addCell(cIVABasico);

            //Columna del total//
            PdfPCell cTotal = new PdfPCell();
            Paragraph pTotal = new Paragraph();
            pTotal.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
            pTotal.setAlignment(Paragraph.ALIGN_CENTER);
            pTotal.add("Total");            
            cTotal.addElement(pTotal);
            tabla.addCell(cTotal);
                       
            tabla.setWidths(new int[]{2,2,1,1,1,1});
            tabla.setWidthPercentage(100);
            
            //---------------------------------------------------------------------------//
            
            DefaultTableModel mdl = (DefaultTableModel) jTable1.getModel();
            Iterator<Factura> it = Conexion.getInstance().ListarFacturasPorFechaSinProveedor(fechaDesde, fechaHasta).iterator();
            mdl.setRowCount(0);
            while (it.hasNext()) {
                Factura next = it.next();
                if (!next.isDeshabilitado()) {
                    float subTotal = next.getTotal() - next.getIvaBasico() - next.getIvaMinimo();
                    sumaSubTotal = sumaSubTotal + subTotal;
                    total = total + next.getTotal();
                    ivaMinimo = ivaMinimo + next.getIvaMinimo();
                    ivaBasico = ivaBasico + next.getIvaBasico();
                    
                    //Celda del proveedor//
                    PdfPCell cellProveedor = new PdfPCell();
                    Paragraph p1 = new Paragraph();
                    p1.setFont(FontFactory.getFont("Arial", 9, BaseColor.BLACK));
                    p1.add(next.getProveedor().getRazonSocial());                  
                    cellProveedor.addElement(p1);
                    
                    //Celda del RUT del proveedor//
                    PdfPCell cellRUTProveedor = new PdfPCell();
                    Paragraph p2 = new Paragraph();
                    p2.setFont(FontFactory.getFont("Arial", 9, BaseColor.BLACK));
                    p2.add(next.getProveedor().getRUT());               
                    cellRUTProveedor.addElement(p2);
                    
                    //Celda del subtotal//
                    PdfPCell cellSubTotal = new PdfPCell();
                    Paragraph p3 = new Paragraph();
                    p3.setFont(FontFactory.getFont("Arial", 9, BaseColor.BLACK));
                    p3.add(String.valueOf(formatoFloat.format(subTotal)));
                    p3.setAlignment(Paragraph.ALIGN_RIGHT);                   
                    cellSubTotal.addElement(p3);
                    
                    //Celda del IVA minimo//
                    PdfPCell cellIvaMinimo = new PdfPCell();
                    Paragraph p4 = new Paragraph();
                    p4.setFont(FontFactory.getFont("Arial", 9, BaseColor.BLACK));
                    p4.add(String.valueOf(formatoFloat.format(next.getIvaMinimo())));
                    p4.setAlignment(Paragraph.ALIGN_RIGHT);
                    cellIvaMinimo.addElement(p4);
                    
                    //Celda del IVA básico//
                    PdfPCell cellIvaBasico = new PdfPCell();
                    Paragraph p5 = new Paragraph();
                    p5.setFont(FontFactory.getFont("Arial", 9, BaseColor.BLACK));
                    p5.add(String.valueOf(formatoFloat.format(next.getIvaBasico())));
                    p5.setAlignment(Paragraph.ALIGN_RIGHT);
                    cellIvaBasico.addElement(p4);
                    
                    //Celda del total//
                    PdfPCell cellTotal = new PdfPCell();
                    Paragraph p6 = new Paragraph();
                    p6.setFont(FontFactory.getFont("Arial", 9, BaseColor.BLACK));
                    p6.add(String.valueOf(formatoFloat.format(next.getTotal())));
                    p6.setAlignment(Paragraph.ALIGN_RIGHT);
                    cellTotal.addElement(p6);
                    
                    tabla.addCell(cellProveedor);
                    tabla.addCell(cellRUTProveedor);
                    tabla.addCell(cellSubTotal);
                    tabla.addCell(cellIvaMinimo);
                    tabla.addCell(cellIvaBasico);
                    tabla.addCell(cellTotal);                    
                }
                
            }
            
            documento.add(tabla);
                        
            //Agrego TOTAL y SUMA DE IVAS//
            
            //Agrego un espacio entre el final de la tabla y el resto//
            Paragraph parrafo3 = new Paragraph();
            parrafo3.add("\n");
            documento.add(parrafo3);
            
            //Ahora agrego los nuevos párrafos con los datos del TOTAl y demás.
            
            //Párrafo del SUBTOTAL//
            Paragraph parrafo4 = new Paragraph();
            parrafo4.setAlignment(Paragraph.ALIGN_RIGHT);
            parrafo4.setFont(FontFactory.getFont("Arial", 10, BaseColor.BLACK));
            parrafo4.add("SUBTOTAL: " + String.valueOf(formatoFloat.format(sumaSubTotal)) + "\n");
            documento.add(parrafo4);
            
            //Párrafo del IVA MÍNIMO//
            Paragraph parrafo5 = new Paragraph();
            parrafo5.setAlignment(Paragraph.ALIGN_RIGHT);
            parrafo5.setFont(FontFactory.getFont("Arial", 10, BaseColor.BLACK));
            parrafo5.add("IVA MÍNIMO: " + String.valueOf(formatoFloat.format(ivaMinimo)) + "\n");
            documento.add(parrafo5);
            
            //Párrafo del IVA BÁSICO
            Paragraph parrafo6 = new Paragraph();
            parrafo6.setAlignment(Paragraph.ALIGN_RIGHT);
            parrafo6.setFont(FontFactory.getFont("Arial", 10, BaseColor.BLACK));
            parrafo6.add("IVA BÁSICO: " + String.valueOf(formatoFloat.format(ivaBasico)) + "\n");
            documento.add(parrafo6);
            
            //Párrafo del TOTAL.
            Paragraph parrafo7 = new Paragraph();
            parrafo7.setAlignment(Paragraph.ALIGN_RIGHT);
            parrafo7.setFont(FontFactory.getFont("Arial", 10, BaseColor.BLACK));
            parrafo7.add("TOTAL: " + String.valueOf(formatoFloat.format(total)) + "\n");
            documento.add(parrafo7);
            
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte creado.");

        } catch (Exception e) {

        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Date fechaDesde = jDateChooserDesde.getDate();
        Date fechaHasta = jDateChooserHasta.getDate();
        float total = 0;
        float ivaMinimo = 0;
        float ivaBasico = 0;
        float sumaSubTotal = 0;
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        DecimalFormat formatoFloat = new DecimalFormat("#.00");
        try {
            HSSFWorkbook book = new HSSFWorkbook();
            HSSFSheet sheet = book.createSheet("Listado IVA");

            List<Factura> listaFacturas = Conexion.getInstance().ListarFacturasPorFechaSinProveedor(fechaDesde, fechaHasta);

            //Las cabeceras que van a ir en el excel//
            String[] cabecera = new String[]{"Proveedor", "RUT", "nro Factura", "Fecha", "Subtotal", "IVA Mínimo", "IVA Básico", "Total"};

            //Estilos para las cabeceras-----------------------------------------------//
            CellStyle headerStyle = book.createCellStyle();
            //headerStyle.setFillBackgroundColor(IndexedColors.BLACK.getIndex());
            //headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            //headerStyle.setBorderBottom(BorderStyle.THIN);
            //headerStyle.setBorderLeft(BorderStyle.THIN);
            //headerStyle.setBorderRight(BorderStyle.THIN);
            //headerStyle.setBorderTop(BorderStyle.THIN);
            //-----------------------------------------------------------------------//
            
            //Fuente para las cabeceras-------------------------------//
            org.apache.poi.ss.usermodel.Font font = book.createFont();
            font.setFontName("Arial");
            font.setBold(true);
            //font.setColor(IndexedColors.WHITE.getIndex());
            font.setFontHeightInPoints((short) 10);
            headerStyle.setFont(font);
            //-------------------------------------------------------//
            
            //Creo la fila en la que van los encabezados
            Row filaEncabezados = sheet.createRow(0);

            //Agrego los encabezados al excel----------------------//
            for (int i = 0; i < cabecera.length; i++) {
                Cell celdaTitulo = filaEncabezados.createCell(i);
                celdaTitulo.setCellStyle(headerStyle);
                celdaTitulo.setCellValue(cabecera[i]);
            }
            //----------------------------------------------------//

            //Convierto los datos que me llegaron como lista a un mapa así se me hace más fácil para iterar-------------//
            Map<Integer, Object[]> datos = new TreeMap<>();
            int contador = 0;
            for (Factura fact : listaFacturas) {
                contador++;
                float subTotal = fact.getTotal() - fact.getIvaBasico() - fact.getIvaMinimo();
                sumaSubTotal = sumaSubTotal + subTotal;
                total = total + fact.getTotal();                
                ivaMinimo = ivaMinimo + fact.getIvaMinimo();
                ivaBasico = ivaBasico + fact.getIvaBasico();
                
                datos.put(contador, new Object[]{contador, fact.getProveedor().getRazonSocial(),
                    fact.getProveedor().getRUT(), fact.getSerieComprobante()+"-"+fact.getNroComprobante(),
                    fact.getFecha(), subTotal, fact.getIvaMinimo(), fact.getIvaBasico(), fact.getTotal()});
            }
            //----------------------------------------------------------------------------------------------------------//

            //Itero sobre datos para escribir en la hoja----------------//
            Set<Integer> keyset = datos.keySet();
            int numeroRenglon = 1;
            boolean shrek = true;
            for (int key : keyset) {
                Row row = sheet.createRow(numeroRenglon++);
                Object[] arregloObjetos = datos.get(key);
                int numeroCelda = 0;
                for (Object obj : arregloObjetos) {
                    Cell cell;
                    if (shrek) {
                        cell = row.createCell(numeroCelda);
                        shrek = false;
                    } else {
                        cell = row.createCell(numeroCelda++);
                    }
                    if (obj instanceof String) {
                        cell.setCellValue((String) obj);
                    } else if (obj instanceof Float) {
                        cell.setCellValue(formatoFloat.format(obj));
                    } else if (obj instanceof Date) {
                        Date date = (Date) obj;
                        LocalDate lt = new java.sql.Date(date.getTime()).toLocalDate();
                        cell.setCellValue((String)lt.toString());
                    }
                }
                shrek = true;
            }
            //---------------------------------------------------------//
            
            //Acá agrego la suma de los IVAS básicos y mínimos, así como también la suma de subtotales y totales---//
            int nuevoNumeroRenglon = numeroRenglon + 1;
            Row row = sheet.createRow(nuevoNumeroRenglon++);
            Cell cellSubtotal = row.createCell(6);
            Cell cellValorSubtotal = row.createCell(7);
            cellSubtotal.setCellStyle(headerStyle);
            cellSubtotal.setCellValue("SUBTOTAL: ");
            cellValorSubtotal.setCellValue(formatoFloat.format(sumaSubTotal));
                       
            Row row2 = sheet.createRow(nuevoNumeroRenglon++);
            Cell cellIVAMinimo = row2.createCell(6);
            cellIVAMinimo.setCellStyle(headerStyle);
            cellIVAMinimo.setCellValue("IVA MÍNIMO: ");
            Cell cellValorIVAMinimo = row2.createCell(7);
            cellValorIVAMinimo.setCellValue(formatoFloat.format(ivaMinimo));
            
            Row row3 = sheet.createRow(nuevoNumeroRenglon++);
            Cell cellIVABasico = row3.createCell(6);
            cellIVABasico.setCellStyle(headerStyle);
            cellIVABasico.setCellValue("IVA BÁSICO: ");
            Cell cellValorIVABasico = row3.createCell(7);
            cellValorIVABasico.setCellValue(formatoFloat.format(ivaBasico));
            
            Row row4 = sheet.createRow(nuevoNumeroRenglon++);
            Cell cellTotal = row4.createCell(6);
            cellTotal.setCellStyle(headerStyle);
            cellTotal.setCellValue("TOTAL: ");
            Cell cellValorTotal = row4.createCell(7);
            cellValorTotal.setCellValue(formatoFloat.format(total));
            //----------------------------------------------------------------------------------------------------//
            
            //Esto es para que el tamaño de las columnas se agrande o achique dependiendo del largo del contenido//
            sheet.autoSizeColumn(0);
            sheet.autoSizeColumn(1);
            sheet.autoSizeColumn(2);
            sheet.autoSizeColumn(3);
            sheet.autoSizeColumn(4);
            sheet.autoSizeColumn(5);
            sheet.autoSizeColumn(6);
            sheet.autoSizeColumn(7);
            //---------------------------------------------------------------------------------------------------//

            //Volcamos la información a un archivo y después lo mostramos--------//
            String ruta = System.getProperty("user.home") + "/reporte.xls";
            File objFile = new File(ruta);
            try (FileOutputStream archivoSalida = new FileOutputStream(objFile)) {
                book.write(archivoSalida);
            }
            Desktop.getDesktop().open(objFile);
            //-------------------------------------------------------------------//

        } catch (Exception e) {

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listadoComprasIVAs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listadoComprasIVAs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listadoComprasIVAs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listadoComprasIVAs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listadoComprasIVAs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JDateChooser jDateChooserDesde;
    private com.toedter.calendar.JDateChooser jDateChooserHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
